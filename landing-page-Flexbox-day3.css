*{
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
    font-family: sans-serif;
    color: rgba(233,231,231);
}

body{
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: rgba(54,59,84);
}

.container{
    height: 80vh;
    width: 85vw;
    padding: 10px 35px;
    background:rgba(54,59,84);
    display: flex;
    flex-direction: column;
    border: 15px;
    box-shadow: 0px 0px 20px rgba(0,0,0,0.3);
}

.header{
    flex-basis: 10%;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.navMenu ul{
    display: flex;
}

.navMenu ul li{
    list-style: none;
    margin: 0px 10px;
}

.navMenu ul li a{
    text-decoration: none;
    font-size: 13px;
    padding: 5px;
    letter-spacing: 2px;
}

.navMenu ul li a:hover,.active{
    background:rgba(225,115,0);
    border-radius: 4px;
}

.logo{
    font-family: "Dancing Script", cursive;
    font-size: 40px;
}


.content-image img{
    height: 200px;
}

.footer{
    flex-basis: 10%;
    background: rgba(36,39,53);
    padding:0px 15px;
    border-radius: 13px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.footer i{
    font-size: 30px;
    color: rgba(255,115,0);
    cursor: pointer;
}

.arrow{
    font-size: 20px !important;
}


/*The flex-basis property specifies the initial length of a flexible item.*/
/*The :hover selector is used to select elements when you mouse over them.

Tip: The :hover selector can be used on all elements, not only on links.

Tip: Use the :link selector to style links to unvisited pages, the :visited selector to style links to visited pages,
and the :active selector to style the active link.
Note: :hover MUST come after :link and :visited (if they are present) in the CSS definition, in order to be effective!*/


/*The !important rule in CSS is used to add more importance to a property/value than normal.
In fact, if you use the !important rule, it will override ALL previous styling rules for that specific property on that
element!

Let us look at an example:

Example
#myid {
  background-color: blue;
}

.myclass {
  background-color: gray;
}

p {
  background-color: red !important;
}*/

/*In the example above. all three paragraphs will get a red background color, even though the ID selector and the class
selector has a higher specificity. The !important rule overrides the background-color property in both cases.*/